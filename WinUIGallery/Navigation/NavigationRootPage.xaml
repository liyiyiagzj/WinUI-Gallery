<!--
    //*********************************************************
    //
    // Copyright (c) Microsoft. All rights reserved.
    // THIS CODE IS PROVIDED *AS IS* WITHOUT WARRANTY OF
    // ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING ANY
    // IMPLIED WARRANTIES OF FITNESS FOR A PARTICULAR
    // PURPOSE, MERCHANTABILITY, OR NON-INFRINGEMENT.
    //
    //*********************************************************
-->
<Page
    x:Class="AppUIBasics.NavigationRootPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:AppUIBasics"
    HighContrastAdjustment="None">

    <Page.Resources>
        <DataTemplate x:Key="NavigationViewHeaderTemplate">
            <local:PageHeader
                Title="{Binding Title}"
                ApiNamespace="{Binding ApiNamespace}"
                Background="Transparent"
                BackgroundColorOpacity="1" />
        </DataTemplate>
    </Page.Resources>

    <Grid Background="{ThemeResource ApplicationPageBackgroundThemeBrush}">

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup>
                <VisualState>
                    <VisualState.StateTriggers>
                        <local:DeviceFamilyTrigger DeviceFamily="Windows.Xbox" />
                    </VisualState.StateTriggers>
                    <VisualState.Setters>
                        <Setter Target="XboxContentSafeRect.Visibility" Value="Visible" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>

        </VisualStateManager.VisualStateGroups>

        <Rectangle
            x:Name="XboxContentSafeRect"
            Width="48"
            Fill="{ThemeResource NavigationViewDefaultPaneBackground}"
            Visibility="Collapsed" Canvas.ZIndex="0" />

        <Border x:Name="AppTitleBar"
                Grid.Column="1"
                IsHitTestVisible="True"
                VerticalAlignment="Top"
                Height="{Binding ElementName=NavigationViewControl, Path=CompactPaneLength}"
                Canvas.ZIndex="1">
            <TextBlock x:Name="AppTitle"
                       Text="{x:Bind AppTitleText}"
                       VerticalAlignment="Top"
                       Margin="0,15,0,0"
                       Style="{StaticResource CaptionTextBlockStyle}" />
        </Border>

        <Grid x:Name="AutomationHelpersPanel"  Grid.Column="1">
            <Grid.Resources>
                <Style x:Key="AutomationHelperStyle" TargetType="Control">
                    <Setter Property="IsTabStop" Value="False"/>
                    <Setter Property="IsHitTestVisible" Value="False"/>
                    <Setter Property="Width" Value="0"/>
                    <Setter Property="Height" Value="0"/>
                    <Setter Property="Opacity" Value="0"/>
                </Style>
            </Grid.Resources>

            <TextBlock x:Name="CurrentPageTextBlock" AutomationProperties.AutomationId="__CurrentPage"  FontSize="18" VerticalAlignment="Center" Margin="10,0,0,0"/>
            <!-- 自动化帮助者 -->
            <!-- 这些是不可见的，但可以通过UIA使用。 它们对于我们的测试自动化的运行至关重要，因此不应崩溃，因为这会阻止它们出现在UIA树上。-->
            <Button x:Name="GoBackInvokerButton" AutomationProperties.AutomationId="__GoBackInvoker" Style="{StaticResource AutomationHelperStyle}" Click="GoBackInvokerButton_Click" />
            <Button x:Name="CloseAppInvokerButton" AutomationProperties.AutomationId="__CloseAppInvoker" Style="{StaticResource AutomationHelperStyle}" Click="CloseAppInvokerButton_Click"/>
            <Button x:Name="WaitForIdleInvokerButton"  AutomationProperties.AutomationId="__WaitForIdleInvoker" Style="{StaticResource AutomationHelperStyle}"  Click="WaitForIdleInvokerButton_Click"/>
            <CheckBox x:Name="_idleStateEnteredCheckBox" AutomationProperties.AutomationId="__IdleStateEnteredCheckBox" Style="{StaticResource AutomationHelperStyle}" />
            <TextBox x:Name="_errorReportingTextBox" AutomationProperties.AutomationId="__ErrorReportingTextBox" Style="{StaticResource AutomationHelperStyle}" />
            <TextBox x:Name="_logReportingTextBox" AutomationProperties.AutomationId="__LogReportingTextBox" Style="{StaticResource AutomationHelperStyle}" />
            <CheckBox x:Name="ViewScalingCheckBox" AutomationProperties.AutomationId="__ViewScalingCheckBox" Style="{StaticResource AutomationHelperStyle}" />
            <Button x:Name="WaitForDebuggerInvokerButton" AutomationProperties.AutomationId="__WaitForDebuggerInvoker" Style="{StaticResource AutomationHelperStyle}" Click="WaitForDebuggerInvokerButton_Click" />
            <CheckBox x:Name="DebuggerAttachedCheckBox" AutomationProperties.AutomationId="__DebuggerAttachedCheckBox" Style="{StaticResource AutomationHelperStyle}" />
            <TextBox x:Name="UnhandledExceptionReportingTextBox" AutomationProperties.AutomationId="__UnhandledExceptionReportingTextBox" Style="{StaticResource AutomationHelperStyle}" AcceptsReturn="True" />
            <CheckBox x:Name="TestContentLoadedCheckBox" IsChecked="False" AutomationProperties.AutomationId="__TestContentLoadedCheckBox" Content="TestContentLoadedCheckbox"  Style="{StaticResource AutomationHelperStyle}" />

        </Grid>

        <!-- 请勿设置ISTITLEBARAUTOPADDINABLED，因为仅在我们使用window.setTitlebar（）时才将其设置为false，而目前尚不可用。 通过重新应用恢复 https://github.com/microsoft/WinUI-Gallery/pull/198 -->
        <NavigationView
            Canvas.ZIndex="0"
            x:Name="NavigationViewControl"
            Grid.Column="1"
            AlwaysShowHeader="True"
            Header=" "
            HeaderTemplate="{StaticResource NavigationViewHeaderTemplate}"
            IsTabStop="False"
            IsTitleBarAutoPaddingEnabled="False"
            PaneOpening="NavigationViewControl_PaneOpening"
            PaneClosing="NavigationViewControl_PaneClosing"
            DisplayModeChanged="NavigationViewControl_DisplayModeChanged"
            SelectionChanged="OnNavigationViewSelectionChanged"
            Loaded="OnNavigationViewControlLoaded">
            <NavigationView.AutoSuggestBox>
                <AutoSuggestBox
                    x:Name="controlsSearchBox"
                    VerticalAlignment="Center"
                    x:FieldModifier="public"
                    PlaceholderText="Search"
                    QueryIcon="Find"
                    QuerySubmitted="OnControlsSearchBoxQuerySubmitted"
                    MinWidth="200"
                    KeyboardAcceleratorPlacementMode="Hidden"
                    TextChanged="OnControlsSearchBoxTextChanged">
                    <AutoSuggestBox.KeyboardAccelerators>
                        <KeyboardAccelerator Modifiers="Control" Key="F" Invoked="CtrlF_Invoked" />
                    </AutoSuggestBox.KeyboardAccelerators>
                </AutoSuggestBox>
            </NavigationView.AutoSuggestBox>

            <Frame x:Name="rootFrame" Navigated="OnRootFrameNavigated" Navigating="OnRootFrameNavigating"/>
        </NavigationView>
    </Grid>
</Page>
